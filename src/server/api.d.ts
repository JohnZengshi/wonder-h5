/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/account/exist": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 检查账号是否注册 */
        get: operations["existUsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/account/findPasswordPay": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查询用户是否设置支付密码 */
        get: operations["findPasswordPayUsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/account/findUser": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查询用户个人信息 */
        get: operations["findUserUsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/account/findUserNameOrPassword": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查询用户账号密码 */
        get: operations["findUserNameOrPasswordUsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/account/modifyTheName": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 修改名称 */
        get: operations["modifyTheNameUsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/account/recommender": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 推荐人页面 */
        get: operations["findPageUsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/account/renewPasswordPay": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 设置或者修改支付密码 */
        post: operations["renewPasswordPayUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/account/signIn": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 登录 */
        post: operations["signInUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/account/signUp": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 注册 */
        post: operations["signUpUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/banner": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查询Banner列表 */
        get: operations["findAllUsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/cart": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 添加或者更新购物车 */
        post: operations["saveOrUpdateUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/cart/page": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 分页查询购物车 */
        get: operations["findPageUsingGET_1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/coin-config/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查询配置 1=积分 2=代币 */
        get: operations["findOneUsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/commodity-order/cancelAnOrder": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 取消订单或者订单过期告诉我 */
        post: operations["cancelAnOrderUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/commodity-order/page": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 分页查询商品订单表 */
        get: operations["findPageUsingGET_2"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/commodity-order/payOrderNumber": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 下单 */
        post: operations["payOrderNumberUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/commodity-order/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 根据ID查询商品订单表 */
        get: operations["findOneUsingGET_2"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/common/notice/detail": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 公告详情(JSON) */
        get: operations["noticeDetailUsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/common/notice/html": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 公告详情(网页) */
        get: operations["noticeHtmlUsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/common/notice/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 公告列表 */
        get: operations["noticeListUsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/common/popUps/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 弹窗公告列表 */
        get: operations["popUpsListUsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/deposit": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查询平台充值记录列表 */
        get: operations["findAllUsingGET_1"];
        put?: never;
        /** 添加或者更新平台充值记录 */
        post: operations["saveOrUpdateUsingPOST_1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/deposit/page": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 分页查询平台充值记录 */
        get: operations["findPageUsingGET_3"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/deposit/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 根据ID查询平台充值记录 */
        get: operations["findOneUsingGET_3"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/file/upload": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 单上传文件 */
        post: operations["uploadUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/file/uploads": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 多文件上传 */
        post: operations["uploadFilesUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/frontPage/findCommodityTypeOrMember": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查询商品专区栏/会员专区信息 */
        get: operations["findCommodityTypeOrMemberUsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/frontPage/pageCommodity": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 根据专区ID查询商品列表 */
        get: operations["pageCommodityUsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/frontPage/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 根据ID查询商品详情 */
        get: operations["findOneUsingGET_1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/key-card/page": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 分页查询卡密表 */
        get: operations["findPageUsingGET_4"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/test/getTwitterToken22": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取推特token22 */
        get: operations["getTwitterToken22UsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/user-mining-machine/income": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查询矿机的收益明细(一定要分页) */
        get: operations["incomeUsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/user-mining-machine/miningMachineList": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查询矿机列表 */
        get: operations["findAllUsingGET_2"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/user-mining-machine/miningMachineStatistics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查询矿机统计 */
        get: operations["miningMachineStatisticsUsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/user-wallet-log/page": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 分页查询资产流水 */
        get: operations["findPageUsingGET_5"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/user-wallet/rechargeAddress": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查询充值地址 */
        get: operations["rechargeAddressUsingGET"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/user-wallet/topUp": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 提交充值 */
        post: operations["topUpUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/user-wallet/transfer": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 转账 */
        post: operations["transferUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/user-wallet/walletConfiguration": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 提币、转账配置 */
        post: operations["withdrawCoinsUsingPOST"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/user-wallet/withdrawCoins": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 发起提币 */
        post: operations["withdrawCoinsUsingPOST_1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        AccountSignInReq: {
            /** @description 设备窜 */
            account?: string;
            /**
             * Format: int32
             * @description 链类型：1=Bitcoin 2=Ethereum 3=Polygon 4=BNB Chain 5=Arbitrum One
             */
            chainType?: number;
            /** @description MD5加密以后给我 */
            password?: string;
        };
        AccountSignInResp: {
            token?: string;
        };
        AccountSignUpReq: {
            /** @description account */
            account?: string;
            /**
             * Format: int32
             * @description 链类型：1=Bitcoin 2=Ethereum 3=Polygon 4=BNB Chain 5=Arbitrum One
             */
            chainType?: number;
            /** @description publicKey */
            publicKey?: string;
            /** @description invitation code */
            shareCode?: string;
        };
        AddressResp: {
            address?: string;
        };
        /** @description Banner */
        "Banner\u5BF9\u8C61": {
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /**
             * Format: int32
             * @description 标记删除，0 / 1
             */
            flag?: number;
            /**
             * Format: int32
             * @description ID
             */
            id?: number;
            /** @description 图片链接 */
            imageUrl?: string;
            /** @description 语言 */
            lang?: string;
            /**
             * Format: int32
             * @description 0隐藏，1显示
             */
            state?: number;
            /** @description 跳转链接 */
            targetUrl?: string;
            /** @description 标题 */
            title?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
        };
        BaseResultOfFileModel: {
            /** Format: int32 */
            code?: number;
            data?: components["schemas"]["FileModel"];
            msg?: string;
            /** Format: int64 */
            timeMillis?: number;
        };
        CancelAnOrderReq: {
            /** @description 订单号 */
            orderNumber?: string;
        };
        CartReq: {
            /**
             * Format: int32
             * @description 购物车ID，删除的时候传给我
             */
            cartId?: number;
            /**
             * Format: int32
             * @description 商品ID 删除的时候不传
             */
            commodityId?: number;
            /**
             * Format: int32
             * @description 0=删除 1=添加
             */
            flag?: number;
            /**
             * Format: int32
             * @description 购物车数量 删除的时候不传
             */
            number?: number;
        };
        /** @description 币种配置表 */
        "CoinConfig\u5BF9\u8C61": {
            /** @description 币种名称 */
            coinName?: string;
            /** @description 创建人 */
            createBy?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /** @description 单日转账限制 */
            dayWithdrawalAmount?: string;
            /**
             * Format: int32
             * @description 标记删除，0 / 1
             */
            flag?: number;
            /**
             * Format: int32
             * @description ID
             */
            id?: number;
            /**
             * Format: int32
             * @description 转账开关
             */
            transfer?: number;
            /** @description 转账手续费 */
            transferFee?: string;
            /**
             * Format: int32
             * @description 1=积分  2=代币
             */
            type?: number;
            /** @description 更新人 */
            updateBy?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            /**
             * Format: int32
             * @description 提币开关
             */
            withdrawal?: number;
            /** @description 提币手续费 */
            withdrawalFee?: string;
        };
        CoinReq: {
            /**
             * Format: int32
             * @description 1=积分  2=代币
             */
            coinId?: number;
        };
        CommodiryPayReq: {
            /**
             * Format: int32
             * @description 商品ID
             */
            commodityId?: number;
            /**
             * Format: int32
             * @description 商品数量
             */
            number?: number;
        };
        CommodiryReq: {
            /**
             * Format: int32
             * @description 10=BSC  20=TRX
             */
            chain?: number;
            /** @description 商品ID */
            commoditys?: components["schemas"]["CommodiryPayReq"][];
            /** @description 合计积分支付金额 */
            paymentOfPoints?: string;
        };
        /** @description 商品订单表 */
        "CommodityOrder\u5BF9\u8C61": {
            /**
             * Format: int32
             * @description 1:有分润奖励和升级  2：没有分润奖励和升级
             */
            award?: number;
            /**
             * Format: int32
             * @description 卡密到账数量
             */
            cardNumber?: number;
            /**
             * Format: int32
             * @description 商品ID
             */
            commodityId?: number;
            /** @description 商品封面图 */
            commodityImg?: string;
            /** @description 商品名称 */
            commodityName?: string;
            /**
             * Format: int32
             * @description 商品数量
             */
            commodityNumber?: number;
            /** @description 商品特点 */
            commodityTrait?: string;
            /** @description 创建人 */
            createBy?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /**
             * Format: date-time
             * @description 订单过期
             */
            expiredTime?: string;
            /**
             * Format: int32
             * @description 标记删除，0 / 1
             */
            flag?: number;
            /**
             * Format: int32
             * @description ID
             */
            id?: number;
            /** @description 下单备注说明 */
            illustrate?: string;
            /** @description 积分支付 */
            integral?: string;
            /**
             * Format: int32
             * @description 卡密类型Id
             */
            keyCardTypeId?: number;
            /**
             * Format: int32
             * @description 获得卡密数量
             */
            number?: number;
            /** @description 商品订单hash */
            orderHash?: string;
            /** @description 订单编号 */
            orderNumber?: string;
            /**
             * Format: int32
             * @description 1:币安链支付  2:TRX链支付
             */
            payStatus?: number;
            /**
             * Format: int32
             * @description 1 待支付 2 支付确认中 3已取消 4等待人工确认 5：已完成
             */
            payType?: number;
            /** @description USDT支付 */
            prices?: string;
            /**
             * Format: int32
             * @description  类型：1卡密  2:会员包
             */
            type?: number;
            /** @description 更新人 */
            updateBy?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            /** @description USDT 最小支付比例 */
            usdtPay?: string;
            /**
             * Format: int32
             * @description 用户ID
             */
            userId?: number;
        };
        /** @description 商品类型表 */
        "Commodity\u5BF9\u8C61": {
            /**
             * Format: int32
             * @description 1 自动发送卡密 2 手动确认
             */
            automatic?: number;
            /**
             * Format: int32
             * @description 1:有分润奖励和升级  2：没有分润奖励和升级
             */
            award?: number;
            /** @description 商品封面图 */
            commodityImg?: string;
            /** @description 商品图JSON */
            commodityImgs?: string;
            /** @description 商品名称 */
            commodityName?: string;
            /** @description 商品特点 */
            commodityTrait?: string;
            /**
             * Format: int32
             * @description 商品专区ID
             */
            commodityTypeId?: number;
            /** @description 创建人 */
            createBy?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /**
             * Format: int32
             * @description 标记删除，0 / 1
             */
            flag?: number;
            /**
             * Format: int32
             * @description 1:突出显示  0：正常显示
             */
            highlight?: number;
            /**
             * Format: int32
             * @description ID
             */
            id?: number;
            /** @description 商品说明 */
            illustrate?: string;
            /** @description 积分价格 */
            integral?: string;
            /**
             * Format: int32
             * @description 卡密类型Id
             */
            keyCardTypeId?: number;
            /**
             * Format: int32
             * @description 矿机配置表ID
             */
            machineConfigId?: number;
            /**
             * Format: int32
             * @description 卡密数量
             */
            number?: number;
            /** @description 商品USDT价格 */
            prices?: string;
            /**
             * Format: int32
             * @description  状态：1销售中  2：已下架
             */
            status?: number;
            /**
             * Format: int32
             * @description  类型：和栏目类型一致
             */
            type?: number;
            /** @description 更新人 */
            updateBy?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            /** @description USDT 最小支付比例  暂时不用 */
            usdtPay?: string;
        };
        /** @description 平台充值记录 */
        "Deposit\u5BF9\u8C61": {
            /** @description 充值金额 */
            amount?: string;
            /**
             * Format: date-time
             * @description 审核时间
             */
            auditTime?: string;
            /**
             * Format: int32
             * @description 1:BSC  2:TRX
             */
            coinId?: number;
            /** @description 创建人 */
            createBy?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /** @description 充值截图 */
            depositImg?: string;
            /**
             * Format: int32
             * @description 标记删除，0 / 1
             */
            flag?: number;
            /**
             * Format: int32
             * @description ID
             */
            id?: number;
            /** @description 订单号 */
            orderNumber?: string;
            /** @description 支付地址 */
            paymentAddress?: string;
            /**
             * Format: int32
             * @description 充值状态，0: 待审核, 1: 审核通过, 2: 审核拒绝 3:已入账
             */
            status?: number;
            /** @description 更新人 */
            updateBy?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            /**
             * Format: int32
             * @description 用户ID
             */
            userId?: number;
        };
        FileModel: {
            fileName?: string;
            filePath?: string;
            fullUrl?: string;
            originFileName?: string;
        };
        MiningMachineCountDTO: {
            /** @description 当前算力 */
            currentComputingPower?: string;
            /** @description 矿机总数量 */
            miningMachineCountNumber?: string;
            /**
             * Format: int32
             * @description 运行的矿机数量
             */
            miningMachineNumber?: number;
            /** @description 总收益 */
            totalRevenue?: string;
        };
        /** @description 公告 */
        "Notice\u5BF9\u8C61": {
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /** @description 内容 */
            noticeContent?: string;
            /**
             * Format: int32
             * @description notice_id
             */
            noticeId?: number;
            /** @description 标题 */
            noticeTitle?: string;
            /**
             * Format: int32
             * @description 1通知 2公告
             */
            noticeType?: number;
            /** @description '备注' */
            remark?: string;
            /**
             * Format: int32
             * @description 0正常 1关闭
             */
            status?: number;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
        };
        OrderItem: {
            asc?: boolean;
            column?: string;
        };
        OrderReq: {
            /** @description 支付金额 */
            amount?: string;
            /**
             * Format: int32
             * @description 10=BSC  20=TRX
             */
            chain?: number;
            /** @description 订单号 10开头就是BSC链  20开头就是币安链 */
            orderNumber?: string;
        };
        Page: {
            countId?: string;
            /** Format: int64 */
            current?: number;
            maxLimit?: string;
            optimizeCountSql?: boolean;
            orders?: components["schemas"]["OrderItem"][];
            /** Format: int64 */
            pages?: number;
            records?: Record<string, never>[];
            searchCount?: boolean;
            /** Format: int64 */
            size?: number;
            /** Format: int64 */
            total?: number;
        };
        PasswordPayReq: {
            /** @description 原密码，第一次设置可以不传 */
            fromPassword?: string;
            /** @description 新密码 */
            toPassword?: string;
        };
        RecommendVo: {
            /** @description BIT积分获取数量 */
            bitAmount?: string;
            /** @description 邀请码 */
            invitationCode?: string;
            /** @description 1级获得BRIT比例 */
            oneBrit?: string;
            /** @description 1级获得NFT */
            oneNft?: string;
            /** @description 1代NFT获得数量 */
            oneNftAmount?: string;
            /** @description 返利比例 */
            rebate?: string;
            /** @description 2级获得BRIT比例 */
            twoBrit?: string;
            /** @description 2级获得NFT */
            twoNft?: string;
            /** @description 2代NFT获得数量 */
            twoNftAmount?: string;
            /** @description USDT获得数量 */
            usdtAmount?: string;
        };
        RegisterResp: {
            account?: string;
            password?: string;
        };
        ResultResp: {
            result?: boolean;
        };
        TransferReq: {
            /** @description 到账地址 */
            address?: string;
            /** @description 转账金额 */
            amount?: string;
            /**
             * Format: int32
             * @description 1=积分  2=代币
             */
            coinId?: number;
            /** @description 支付密码 */
            password?: string;
        };
        /** @description 用户矿机购买记录表 */
        "UserMiningMachine\u5BF9\u8C61": {
            /**
             * Format: int32
             * @description 币种ID
             */
            coinId?: number;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /** @description 已产生收益 */
            earnedReward?: string;
            /**
             * Format: date-time
             * @description 矿机到期时间
             */
            endTime?: string;
            /** @description 算力 (TH/s) */
            hashrate?: string;
            /**
             * Format: int32
             * @description ID
             */
            id?: number;
            /**
             * Format: date-time
             * @description 上次收益计算时间
             */
            lastRewardTime?: string;
            /**
             * Format: int32
             * @description 矿机配置ID (关联 mining_machine_config)
             */
            machineId?: number;
            /** @description 矿机型号 */
            machineName?: string;
            /**
             * Format: date-time
             * @description 下一次收益计算时间
             */
            nextRewardTime?: string;
            /** @description 购买订单号 */
            orderNumber?: string;
            /** @description 购买价格 (USDT) */
            purchasePrice?: string;
            /**
             * Format: date-time
             * @description 购买时间
             */
            purchaseTime?: string;
            /**
             * Format: date-time
             * @description 矿机开始运行时间
             */
            startTime?: string;
            /**
             * Format: int32
             * @description 矿机状态 (0: 停止, 1: 运行中, 2: 过期)
             */
            status?: number;
            /** @description 矿机预计总收益 */
            totalReward?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            /**
             * Format: int32
             * @description 用户ID
             */
            userId?: number;
            /**
             * Format: int32
             * @description 有效天数 (运行周期)
             */
            validDays?: number;
        };
        UserPasswordVo: {
            account?: string;
            base64Img?: string;
            password?: string;
        };
        UserVo: {
            /** @description 账号 */
            account?: string;
            /** @description 充值地址 */
            address?: string;
            /** Format: int32 */
            id?: number;
            /**
             * Format: int32
             * @description 会员等级
             */
            level?: number;
            /** @description 邀请码 */
            shareCode?: string;
            /** @description 8位UID */
            uid?: string;
            /** @description 用户头像 */
            userImg?: string;
            /** @description 用户名称 */
            userName?: string;
            /**
             * Format: date-time
             * @description 会员有效期
             */
            userTime?: string;
            /** @description 资产 */
            userWallets?: components["schemas"]["UserWallet\u5BF9\u8C61"][];
        };
        /** @description 资产 */
        "UserWallet\u5BF9\u8C61": {
            /** @description 余额 */
            balance?: string;
            /**
             * Format: int32
             * @description 币种id
             */
            coinId?: number;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /**
             * Format: int32
             * @description 标记删除，0 / 1
             */
            flag?: number;
            /** @description 冻结，余额的一部分 */
            frozen?: string;
            /**
             * Format: int32
             * @description ID
             */
            id?: number;
            /** Format: int32 */
            memberId?: number;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
        };
        WalletReq: {
            /** @description 提币金额 */
            amount?: string;
            /**
             * Format: int32
             * @description 1=BSC  2=TRX
             */
            chain?: number;
            /**
             * Format: int32
             * @description 1=积分  2=代币
             */
            coinId?: number;
            /** @description 支付密码 */
            paymentPassword?: string;
            /** @description 收款地址 */
            toAddress?: string;
        };
        /** @description 商品订单记录 */
        CommodityOrderRecord: {
            /**
             * @description 订单ID
             * @example 126684
             */
            id?: number;
            /**
             * @description 商品名称
             * @example 21221
             */
            commodityName?: string;
            /**
             * Format: int32
             * @description 商品数量
             * @example 3
             */
            commodityNumber?: number;
            /**
             * Format: int32
             * @description 积分支付金额
             * @example 1500
             */
            integral?: number;
            /**
             * @description 订单创建时间
             * @example 2025-03-16 00:00:21
             */
            createTime?: string;
            /**
             * @description 商品图片URL
             * @example http://192.168.1.111:9090/imguser/e3f65d9e48d64dec89f7dc32cd7b0d79.png
             */
            commodityImg?: string;
            /**
             * @description 订单编号
             * @example 102000001895639515
             */
            orderNumber?: string;
            /**
             * Format: int32
             * @description 支付状态 (1-待支付)
             * @example 1
             */
            payStatus?: number;
            /**
             * @description 实际支付金额
             * @example 19.99
             */
            prices?: number;
            /**
             * @description 订单过期时间
             * @example 2025-03-16 00:30:22
             */
            expiredTime?: string;
            /**
             * Format: int32
             * @description 商品ID
             * @example 126706
             */
            commodityId?: number;
        };
        /** @description 推荐人用户信息 */
        UserRecommender: {
            /**
             * Format: int32
             * @description 用户ID
             * @example 367
             */
            id?: number;
            /**
             * Format: int32
             * @description 直推人数
             * @example 0
             */
            shareNum?: number;
            /**
             * Format: int32
             * @description 团队人数
             * @example 0
             */
            teamNum?: number;
            /**
             * @description 邀请码
             * @example LDPO68
             */
            shareCode?: string;
            /**
             * @description 用户名
             * @example WONDER367
             */
            userName?: string;
            /**
             * @description 用户头像
             * @example null
             */
            userImg?: string;
        };
        /** @description 矿机收益明细记录 */
        MiningIncomeRecord: {
            /**
             * Format: int32
             * @description 币种ID（1:积分 2:代币）
             * @example 1
             */
            coinId?: number;
            /**
             * Format: double
             * @description 收益金额
             * @example 5.32
             */
            rewardAmount?: number;
            /**
             * Format: date-time
             * @description 收益时间
             * @example 2024-03-15 14:30:00
             */
            rewardTime?: string;
            /**
             * Format: date-time
             * @description 创建时间
             * @example 2024-03-15 14:30:00
             */
            createTime?: string;
            /**
             * Format: date-time
             * @description 更新时间
             * @example 2024-03-15 14:30:00
             */
            updateTime?: string;
            /**
             * Format: int32
             * @description 结算状态（1:已结算 0:待结算）
             * @example 1
             */
            status?: number;
        };
        /** @description 矿机收益分页结果 */
        MiningIncomePageResult: {
            records?: components["schemas"]["MiningIncomeRecord"][];
            /**
             * Format: int64
             * @example 100
             */
            total?: number;
            /**
             * Format: int32
             * @example 10
             */
            size?: number;
            /**
             * Format: int32
             * @example 1
             */
            current?: number;
            /**
             * Format: int32
             * @example 10
             */
            pages?: number;
        };
        /** @description 卡密记录项 */
        KeyCardRecord: {
            /**
             * @description 卡密编码
             * @example CARD-2024-001
             */
            cardKey?: string;
            /**
             * Format: date-time
             * @description 过期时间
             * @example 2024-12-31 23:59:59
             */
            expiredTime?: string;
            /**
             * @description 卡密类型名称
             * @example 会员卡
             */
            keyCardTypeName?: string;
        };
        KeyCardPageResult: {
            records?: components["schemas"]["KeyCardRecord"][];
            /**
             * Format: int64
             * @example 100
             */
            total?: number;
            /**
             * Format: int32
             * @example 10
             */
            size?: number;
            /**
             * Format: int32
             * @example 1
             */
            current?: number;
            /**
             * Format: int32
             * @example 10
             */
            pages?: number;
        };
        /** @description 资产流水记录项 */
        WalletLogRecord: {
            /**
             * Format: int32
             * @description 账户类型（1:余额 2:冻结）
             * @example 1
             */
            type?: number;
            /**
             * Format: int32
             * @description 币种类型（1:积分 2:代币）
             * @example 1
             */
            coinId?: number;
            /**
             * Format: int32
             * @description 操作类型（根据业务定义）
             * @example 3
             */
            opType?: number;
            /**
             * @description 流水类型说明
             * @example 矿机收益结算
             */
            opRemark?: string;
            /**
             * Format: double
             * @description 变动的金额
             * @example 50.5
             */
            opValue?: number;
            /**
             * @description 额外备注信息
             * @example 矿机ID: 1001
             */
            extRemark?: string;
            /**
             * Format: date-time
             * @description 记录创建时间
             * @example 2024-03-15 14:30:00
             */
            createTime?: string;
        };
        WalletLogPageResult: {
            records?: components["schemas"]["WalletLogRecord"][];
            /**
             * Format: int64
             * @example 100
             */
            total?: number;
            /**
             * Format: int32
             * @example 10
             */
            size?: number;
            /**
             * Format: int32
             * @example 1
             */
            current?: number;
            /**
             * Format: int32
             * @example 10
             */
            pages?: number;
        };
        Deposit: {
            /** @description 充值金额 */
            amount?: string;
            /**
             * Format: date-time
             * @description 审核时间
             */
            auditTime?: string;
            /**
             * Format: int32
             * @description 1:BSC 2:TRX
             */
            coinId?: number;
            /** @description 创建人 */
            createBy?: string;
            /**
             * Format: date-time
             * @description 创建时间
             */
            createTime?: string;
            /** @description 充值截图 */
            depositImg?: string;
            /**
             * Format: int32
             * @description 标记删除，0 / 1
             */
            flag?: number;
            /**
             * Format: int32
             * @description ID
             */
            id?: number;
            illustrate?: string;
            /** @description 订单号 */
            orderNumber?: string;
            /** @description 支付地址 */
            paymentAddress?: string;
            /**
             * Format: int32
             * @description 充值状态，0: 待审核, 1: 审核通过, 2: 审核拒绝 3:已入账 4:自动审核
             */
            status?: number;
            /** @description 更新人 */
            updateBy?: string;
            /**
             * Format: date-time
             * @description 更新时间
             */
            updateTime?: string;
            /**
             * Format: int32
             * @description 用户ID
             */
            userId?: number;
        };
        CommodityType: {
            /** Format: int64 */
            id: number;
            /** Format: date-time */
            createTime: string;
            createBy?: string | null;
            /** Format: date-time */
            updateTime: string;
            updateBy?: string | null;
            /** Format: int32 */
            flag: number;
            typeName: string;
            /** Format: int32 */
            type: number;
        };
        BaseResponse: {
            /** @example 0 */
            code?: number;
            /** @example Success */
            msg?: string;
            /**
             * Format: int64
             * @example 1741101832125
             */
            timeMillis?: number;
            data?: Record<string, never>;
        };
    };
    responses: never;
    parameters: {
        /** @description 全局参数，token */
        Authorization: string;
        /** @description 全局参数，语言,en,zh-CN */
        AcceptLanguage: string;
        /** @description 全局参数，地址 */
        Address: string;
    };
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    existUsingGET: {
        parameters: {
            query?: {
                /** @description account */
                account?: string;
            };
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: {
                            [key: string]: boolean;
                        };
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findPasswordPayUsingGET: {
        parameters: {
            query?: never;
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: {
                            exist?: boolean;
                        };
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findUserUsingGET: {
        parameters: {
            query?: never;
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: components["schemas"]["UserVo"];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findUserNameOrPasswordUsingGET: {
        parameters: {
            query?: never;
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: components["schemas"]["UserPasswordVo"];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    modifyTheNameUsingGET: {
        parameters: {
            query?: {
                /** @description userName */
                userName?: string;
            };
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: {
                            [key: string]: boolean;
                        };
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findPageUsingGET: {
        parameters: {
            query: {
                /** @description pageNum */
                pageNum: number;
                /** @description pageSize */
                pageSize: number;
            };
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        /** @description 推荐人分页结果 */
                        data?: {
                            page?: components["schemas"]["Page"];
                            user?: components["schemas"]["UserRecommender"];
                        };
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    renewPasswordPayUsingPOST: {
        parameters: {
            query?: never;
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PasswordPayReq"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: {
                            [key: string]: boolean;
                        };
                    };
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    signInUsingPOST: {
        parameters: {
            query?: never;
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["AccountSignInReq"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: components["schemas"]["AccountSignInResp"];
                    };
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    signUpUsingPOST: {
        parameters: {
            query?: never;
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["AccountSignUpReq"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: components["schemas"]["RegisterResp"];
                    };
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findAllUsingGET: {
        parameters: {
            query?: never;
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: components["schemas"]["Banner\u5BF9\u8C61"][];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    saveOrUpdateUsingPOST: {
        parameters: {
            query?: never;
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["CartReq"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: {
                            [key: string]: boolean;
                        };
                    };
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findPageUsingGET_1: {
        parameters: {
            query: {
                /** @description pageNum */
                pageNum: number;
                /** @description pageSize */
                pageSize: number;
            };
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: components["schemas"]["Page"];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findOneUsingGET: {
        parameters: {
            query?: never;
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path: {
                /** @description id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: components["schemas"]["CoinConfig\u5BF9\u8C61"];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    cancelAnOrderUsingPOST: {
        parameters: {
            query?: never;
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["CancelAnOrderReq"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: {
                            [key: string]: boolean;
                        };
                    };
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findPageUsingGET_2: {
        parameters: {
            query: {
                /** @description pageNum */
                pageNum: number;
                /** @description pageSize */
                pageSize: number;
                /** @description type */
                type: number;
            };
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: {
                            records?: components["schemas"]["CommodityOrderRecord"][];
                            /** @example 100 */
                            total?: number;
                            /** @example 10 */
                            size?: number;
                            /** @example 1 */
                            current?: number;
                        };
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    payOrderNumberUsingPOST: {
        parameters: {
            query?: never;
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["CommodiryReq"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: components["schemas"]["OrderReq"];
                    };
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findOneUsingGET_2: {
        parameters: {
            query?: never;
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path: {
                /** @description id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: components["schemas"]["CommodityOrder\u5BF9\u8C61"];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    noticeDetailUsingGET: {
        parameters: {
            query?: {
                /** @description id */
                id?: number;
            };
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: components["schemas"]["Notice\u5BF9\u8C61"];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    noticeHtmlUsingGET: {
        parameters: {
            query?: {
                /** @description id */
                id?: number;
            };
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: string;
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    noticeListUsingGET: {
        parameters: {
            query?: {
                /** @description 分页页码，从1开始 */
                page?: number;
                /** @description 分页大小，默认20，最大500 */
                size?: number;
            };
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: components["schemas"]["Page"];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    popUpsListUsingGET: {
        parameters: {
            query?: {
                /** @description 分页页码，从1开始 */
                page?: number;
                /** @description 分页大小，默认20，最大500 */
                size?: number;
            };
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: components["schemas"]["Page"];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findAllUsingGET_1: {
        parameters: {
            query?: never;
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: components["schemas"]["Deposit\u5BF9\u8C61"][];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    saveOrUpdateUsingPOST_1: {
        parameters: {
            query?: never;
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["Deposit\u5BF9\u8C61"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: {
                            [key: string]: boolean;
                        };
                    };
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findPageUsingGET_3: {
        parameters: {
            query: {
                /** @description pageNum */
                pageNum: number;
                /** @description pageSize */
                pageSize: number;
            };
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: components["schemas"]["Page"];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findOneUsingGET_3: {
        parameters: {
            query?: never;
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path: {
                /** @description id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: components["schemas"]["Deposit\u5BF9\u8C61"];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    uploadUsingPOST: {
        parameters: {
            query?: never;
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "multipart/form-data": {
                    /** Format: binary */
                    file?: string;
                };
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: components["schemas"]["BaseResultOfFileModel"];
                    };
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    uploadFilesUsingPOST: {
        parameters: {
            query?: never;
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>[];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: components["schemas"]["FileModel"][];
                    };
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findCommodityTypeOrMemberUsingGET: {
        parameters: {
            query?: never;
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功响应 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: {
                            commodityTypeList?: components["schemas"]["CommodityType"][];
                            member?: components["schemas"]["Commodity\u5BF9\u8C61"];
                        };
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    pageCommodityUsingGET: {
        parameters: {
            query: {
                /** @description pageNum */
                pageNum: number;
                /** @description pageSize */
                pageSize: number;
                /** @description commodityTypeId */
                commodityTypeId?: number;
                /** @description type */
                type?: number;
            };
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: components["schemas"]["Page"];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findOneUsingGET_1: {
        parameters: {
            query?: never;
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path: {
                /** @description id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: components["schemas"]["Commodity\u5BF9\u8C61"];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findPageUsingGET_4: {
        parameters: {
            query: {
                /** @description pageNum */
                pageNum: number;
                /** @description pageSize */
                pageSize: number;
            };
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: components["schemas"]["KeyCardPageResult"];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getTwitterToken22UsingGET: {
        parameters: {
            query?: {
                /** @description code */
                code?: string;
            };
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: components["schemas"]["RecommendVo"];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    incomeUsingGET: {
        parameters: {
            query: {
                /** @description pageNum */
                pageNum: number;
                /** @description pageSize */
                pageSize: number;
                /** @description userMiningMachineId */
                userMiningMachineId?: number;
            };
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: components["schemas"]["MiningIncomePageResult"];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findAllUsingGET_2: {
        parameters: {
            query?: {
                /** @description 矿机状态 (0: 停止, 1: 运行中, 2: 过期) */
                status?: number;
            };
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: components["schemas"]["UserMiningMachine\u5BF9\u8C61"][];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    miningMachineStatisticsUsingGET: {
        parameters: {
            query?: never;
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: components["schemas"]["MiningMachineCountDTO"];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    findPageUsingGET_5: {
        parameters: {
            query: {
                /** @description pageNum */
                pageNum: number;
                /** @description pageSize */
                pageSize: number;
                /** @description walletId */
                walletId: number;
            };
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: components["schemas"]["WalletLogPageResult"];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    rechargeAddressUsingGET: {
        parameters: {
            query?: {
                /** @description 1=积分  2=代币 */
                coinId?: number;
            };
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: components["schemas"]["AddressResp"];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    topUpUsingPOST: {
        parameters: {
            query?: {
                /** @description 充值金额 */
                amount?: string;
                /** @description 1:BSC  2:TRX */
                coinId?: number;
                /** @description 支付地址 */
                paymentAddress?: string;
                /** @description 充值截图 */
                depositImg?: string;
            };
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: components["schemas"]["Deposit"];
                    };
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    transferUsingPOST: {
        parameters: {
            query?: never;
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["TransferReq"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: components["schemas"]["ResultResp"];
                    };
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    withdrawCoinsUsingPOST: {
        parameters: {
            query?: never;
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["CoinReq"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: components["schemas"]["CoinConfig\u5BF9\u8C61"];
                    };
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    withdrawCoinsUsingPOST_1: {
        parameters: {
            query?: never;
            header?: {
                /** @description 全局参数，token */
                Authorization?: string;
                /** @description 全局参数，语言,en,zh-CN */
                "Accept-Language"?: string;
                /** @description 全局参数，地址 */
                address?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["WalletReq"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BaseResponse"] & {
                        data?: {
                            [key: string]: boolean;
                        };
                    };
                };
            };
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
